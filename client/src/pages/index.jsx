import { useState, useEffect } from 'react';

import axios from 'axios';

import { Container, InputButtonContainer, NovoJogo, AlfabetoContainer } from '../styles/style';

import Head from 'next/head';
import DesenhoForca from '../components/DesenhoForca';
import Alfabeto from '../components/Alfabeto';

export default function Home() {
  const BASE_URL = 'http://localhost:4000';
  const [vidas, setVidas] = useState(6);
  const [letras, setLetras] = useState([]);
  const [jogo, setJogo] = useState({});
  const [verificaSeGanhou, setVerificaSeGanhou] = useState(false);
  const [verificaSeReiniciaJogo, setVerificaSeReiniciaJogo] = useState(false);
  const [letrasAlfabeto, setLetrasAlfabeto] = useState([
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
  ]);
  const [letraDisponivel, setLetraDisponivel] = useState(Array(letrasAlfabeto.length).fill(false));

  const verificaPalavra = async (letra) => {
    const { data } = await axios.post(`${BASE_URL}/verificaLetra`, {
      id: jogo.id,
      letra: letra,
    });
    console.log(data);
    return data.length > 0 ? data : -1;
  };

  const confirmaLetra = async (letra, index) => {
    console.log('🚀 ~ file: index.jsx:58 ~ confirmaLetra ~ letra', letra);
    const resultadoverificaPalavra = await verificaPalavra(letra);

    if (resultadoverificaPalavra == -1) {
      setVidas(vidas - 1);
    } else {
      let palavraSecreta = letras;
      resultadoverificaPalavra.forEach((index) => {
        palavraSecreta[index] = letra;
      });
      setLetras([...palavraSecreta]);
    }
    const arrayLetrasDesabilitadas = letraDisponivel;
    arrayLetrasDesabilitadas[index] = true;
    setLetraDisponivel([...arrayLetrasDesabilitadas]);
    setVerificaSeGanhou(venceu());
  };

  const resetGame = async () => {
    setVerificaSeReiniciaJogo(true);
    const { data } = await axios.get(`${BASE_URL}/start`);
    setJogo(data);
    setLetras([...Array(data.quantidadeLetras).fill('_ ')]);
    setVidas(6);
    setVerificaSeGanhou(false);
    setLetraDisponivel([...Array(letrasAlfabeto.length).fill(false)]);
    setTimeout(() => {
      setVerificaSeReiniciaJogo(false);
    }, 0);
  };

  const venceu = () => {
    return !letras.includes('_ ');
  };

  useEffect(() => {
    (async () => {
      const { data } = await axios.get(`${BASE_URL}/start`);
      setJogo(data);
      const { quantidadeLetras } = data;
      setLetras([...Array(quantidadeLetras).fill('_ ')]);
      console.log(data);
    })();
  }, []);
  return (
    <Container>
      <Head>
        <title>Jogo da Forca </title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/icon.png' />
      </Head>
      <h1>Jogo da Forca SD</h1>
      <h3>{jogo?.pergunta}</h3>
      <h2>Vidas restantes: {vidas}</h2>
      <DesenhoForca vidas={vidas} />
      <p>{letras}</p>

      {venceu() ? (
        <>
          <NovoJogo>
            <h1>✌🏾 Você ganhou! ✌🏾</h1>
            <button onClick={() => resetGame()}>Novo Jogo</button>
          </NovoJogo>
        </>
      ) : vidas === 0 ? (
        <NovoJogo>
          <h1>☠️ Game Over ☠️</h1>
          <button onClick={() => resetGame()}>Novo Jogo</button>
        </NovoJogo>
      ) : (
        <>
          <AlfabetoContainer>
            {letrasAlfabeto.map((letra, index) => (
              <Alfabeto
                key={index}
                value={letra}
                disabled={letraDisponivel[index]}
                onClick={() => confirmaLetra(letra, index)}
              />
            ))}
          </AlfabetoContainer>
        </>
      )}
    </Container>
  );
}
